{"version":3,"file":"report_charts.min.js","sources":["../src/report_charts.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Report charts module (with advanced table).\n *\n * @module     aiprovider_datacurso/report_charts\n * @copyright  2025 Industria Elearning\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/* eslint-disable */\nimport Ajax from 'core/ajax';\nimport Chart from 'core/chartjs';\nimport { get_string as getString } from 'core/str';\n\nexport const init = () => {\n\n    const tokensAvailable = document.getElementById('tokens-available');\n    const tokensConsumed = document.getElementById('tokens-consumed');\n    const tableBody = document.getElementById('consumption-table-body');\n\n    // Filtros y paginación\n    const filterService = document.getElementById('filter-service');\n    const filterAction = document.getElementById('filter-action');\n    const prevPageBtn = document.getElementById('prev-page');\n    const nextPageBtn = document.getElementById('next-page');\n    const pageInfo = document.getElementById('page-info');\n\n    let consumos = [];\n    let filteredConsumos = [];\n    let currentPage = 1;\n    const rowsPerPage = 10;\n\n    let chartBar, chartPie, chartDay;\n\n    // 🔹 1. WS calls\n    Promise.all([\n        Ajax.call([{ methodname: 'aiprovider_datacurso_get_consumption_history', args: {} }])[0],\n        Ajax.call([{ methodname: 'aiprovider_datacurso_get_tokens_saldo', args: {} }])[0],\n    ]).then(async ([historyResponse, saldoResponse]) => {\n\n        console.log(\"response\", historyResponse)\n        consumos = historyResponse?.consumption || [];\n        const saldo = saldoResponse?.saldo_actual || 0;\n\n        // 🔹 2. Update cards\n        tokensAvailable.textContent = saldo;\n        tokensConsumed.textContent = consumos.reduce((sum, c) => sum + (c.cantidad_tokens || 0), 0);\n\n        // 🔹 3. Initialize filters for table\n        initTable(consumos);\n\n        // 🔹 4. Initialize charts\n        initCharts(consumos);\n\n    }).catch(err => {\n        console.error(\"❌ WS Error\", err);\n    });\n\n\n    // ============================================================\n    // 📊 CHARTS SECTION\n    // ============================================================\n    const initCharts = (data) => {\n        const filterBar = document.getElementById('filter-service-bar');\n        const filterPie = document.getElementById('filter-service-pie');\n\n        // Fill selects\n        const servicios = [...new Set(data.map(c => c.id_servicio))];\n        servicios.forEach(s => {\n            filterBar.innerHTML += `<option value=\"${s}\">${s}</option>`;\n            filterPie.innerHTML += `<option value=\"${s}\">${s}</option>`;\n        });\n\n        // Initial render\n        renderBarChart(data);\n        renderPieChart(data);\n        renderDayChart(data);\n\n        // Listeners → each chart listens ONLY to its filter\n        filterBar.addEventListener('change', () => renderBarChart(data));\n        filterPie.addEventListener('change', () => renderPieChart(data));\n\n        // Date filters for daily chart\n        document.getElementById('filter-start-date').addEventListener('change', () => renderDayChart(data));\n        document.getElementById('filter-end-date').addEventListener('change', () => renderDayChart(data));\n    };\n\n    const renderBarChart = (data) => {\n        const filterValue = document.getElementById('filter-service-bar').value;\n        let filteredData = filterValue === 'ALL' ? data : data.filter(c => c.id_servicio === filterValue);\n\n        const byMonth = {};\n        filteredData.forEach(c => {\n            const month = c.fecha.substring(0, 7);\n            byMonth[month] = (byMonth[month] || 0) + c.cantidad_tokens;\n        });\n\n        const ctx1 = document.getElementById('chart-tokens-by-month');\n        if (chartBar) chartBar.destroy();\n        chartBar = new Chart(ctx1, {\n            type: 'bar',\n            data: {\n                labels: Object.keys(byMonth),\n                datasets: [{\n                    label: 'Tokens consumed',\n                    data: Object.values(byMonth),\n                    backgroundColor: '#0073e6'\n                }]\n            }\n        });\n    };\n\n    const renderPieChart = (data) => {\n        const filterValue = document.getElementById('filter-service-pie').value;\n        let filteredData = filterValue === 'ALL' ? data : data.filter(c => c.id_servicio === filterValue);\n\n        const byAction = {};\n        filteredData.forEach(c => {\n            byAction[c.accion] = (byAction[c.accion] || 0) + c.cantidad_tokens;\n        });\n\n        const ctx2 = document.getElementById('chart-actions');\n        if (chartPie) chartPie.destroy();\n        chartPie = new Chart(ctx2, {\n            type: 'pie',\n            data: {\n                labels: Object.keys(byAction),\n                datasets: [{\n                    data: Object.values(byAction),\n                    backgroundColor: ['#36A2EB', '#FF6384', '#FFCE56', '#4BC0C0']\n                }]\n            }\n        });\n    };\n\n    const renderDayChart = (data) => {\n        const startDate = document.getElementById('filter-start-date').value;\n        const endDate = document.getElementById('filter-end-date').value;\n\n        let filteredData = data;\n        if (startDate) filteredData = filteredData.filter(c => c.fecha >= startDate);\n        if (endDate) filteredData = filteredData.filter(c => c.fecha <= endDate);\n\n        const byDay = {};\n        filteredData.forEach(c => {\n            const day = c.fecha.substring(0, 10);\n            byDay[day] = (byDay[day] || 0) + c.cantidad_tokens;\n        });\n\n        const ctx3 = document.getElementById('chart-tokens-by-day');\n        if (chartDay) chartDay.destroy();\n        chartDay = new Chart(ctx3, {\n            type: 'line',\n            data: {\n                labels: Object.keys(byDay),\n                datasets: [{\n                    label: 'Tokens consumed per day',\n                    data: Object.values(byDay),\n                    borderColor: '#28a745',\n                    backgroundColor: 'rgba(40,167,69,0.2)',\n                    fill: true,\n                }]\n            }\n        });\n    };\n\n    // ============================================================\n    // 📋 TABLE SECTION (filters + pagination)\n    // ============================================================\n\n    const initTable = async (data) => {\n        consumos = data;\n        filteredConsumos = [...data];\n\n        // Rellenar filtros\n        const uniqueServices = [...new Set(consumos.map(c => c.id_servicio))];\n        const uniqueActions = [...new Set(consumos.map(c => c.accion))];\n\n        uniqueServices.forEach(s => {\n            const opt = document.createElement('option');\n            opt.value = s;\n            opt.textContent = s;\n            filterService.appendChild(opt);\n        });\n\n        uniqueActions.forEach(a => {\n            const opt = document.createElement('option');\n            opt.value = a;\n            opt.textContent = a;\n            filterAction.appendChild(opt);\n        });\n\n        // Listeners de filtros\n        filterService.addEventListener('change', applyFilters);\n        filterAction.addEventListener('change', applyFilters);\n\n        // Paginación\n        prevPageBtn.addEventListener('click', () => {\n            if (currentPage > 1) {\n                currentPage--;\n                renderTable();\n            }\n        });\n\n        nextPageBtn.addEventListener('click', () => {\n            const totalPages = Math.ceil(filteredConsumos.length / rowsPerPage);\n            if (currentPage < totalPages) {\n                currentPage++;\n                renderTable();\n            }\n        });\n\n        renderTable();\n    };\n\n    const applyFilters = () => {\n        const serviceValue = filterService.value;\n        const actionValue = filterAction.value;\n\n        filteredConsumos = consumos.filter(item => {\n            const serviceMatch = serviceValue === 'all' || item.id_servicio === serviceValue;\n            const actionMatch = actionValue === 'all' || item.accion === actionValue;\n            return serviceMatch && actionMatch;\n        });\n\n        currentPage = 1;\n        renderTable();\n    };\n\n    const renderTable = async () => {\n        tableBody.innerHTML = '';\n        if (filteredConsumos.length === 0) {\n            const nodata = await getString('nodata', 'aiprovider_datacurso');\n            tableBody.innerHTML = `<tr><td colspan=\"7\" class=\"text-center\">${nodata}</td></tr>`;\n            pageInfo.textContent = '';\n            prevPageBtn.disabled = true;\n            nextPageBtn.disabled = true;\n            return;\n        }\n\n        const start = (currentPage - 1) * rowsPerPage;\n        const end = start + rowsPerPage;\n        const pageItems = filteredConsumos.slice(start, end);\n\n        pageItems.forEach(item => {\n            const row = document.createElement('tr');\n            row.innerHTML = `\n                <td>${item.id_consumo}</td>\n                <td>${item.userid}</td>\n                <td>${item.accion}</td>\n                <td>${item.id_servicio}</td>\n                <td>${item.cantidad_tokens}</td>\n                <td>${item.saldo_restante}</td>\n                <td>${item.fecha}</td>\n            `;\n            tableBody.appendChild(row);\n        });\n\n        const totalPages = Math.ceil(filteredConsumos.length / rowsPerPage);\n        pageInfo.textContent = `Página ${currentPage} de ${totalPages}`;\n        prevPageBtn.disabled = currentPage === 1;\n        nextPageBtn.disabled = currentPage === totalPages;\n    };\n};\n"],"names":["tokensAvailable","document","getElementById","tokensConsumed","tableBody","filterService","filterAction","prevPageBtn","nextPageBtn","pageInfo","consumos","filteredConsumos","currentPage","chartBar","chartPie","chartDay","Promise","all","Ajax","call","methodname","args","then","async","historyResponse","saldoResponse","console","log","consumption","saldo","saldo_actual","textContent","reduce","sum","c","cantidad_tokens","initTable","initCharts","catch","err","error","data","filterBar","filterPie","Set","map","id_servicio","forEach","s","innerHTML","renderBarChart","renderPieChart","renderDayChart","addEventListener","filterValue","value","filteredData","filter","byMonth","month","fecha","substring","ctx1","destroy","Chart","type","labels","Object","keys","datasets","label","values","backgroundColor","byAction","accion","ctx2","startDate","endDate","byDay","day","ctx3","borderColor","fill","uniqueServices","uniqueActions","opt","createElement","appendChild","a","applyFilters","renderTable","totalPages","Math","ceil","length","serviceValue","actionValue","item","serviceMatch","actionMatch","nodata","disabled","start","end","slice","row","id_consumo","userid","saldo_restante"],"mappings":"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"}