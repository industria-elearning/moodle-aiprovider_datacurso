{"version":3,"file":"report_charts.min.js","sources":["../src/report_charts.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Report charts module.\n *\n * @module     aiprovider_datacurso/report_charts\n * @copyright  2025 Industria Elearning\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/* eslint-disable */\nimport Ajax from 'core/ajax';\nimport Chart from 'core/chartjs';\n\nexport const init = () => {\n    const tokensAvailable = document.getElementById('tokens-available');\n    const tokensConsumed = document.getElementById('tokens-consumed');\n\n    let chartBar, chartPie, chartDay;\n\n    // ============================================================\n    // üîπ 1. CARGA INICIAL: SALDO Y SERVICIOS\n    // ============================================================\n    Promise.all([\n        Ajax.call([{ methodname: 'aiprovider_datacurso_get_tokens_saldo', args: {} }])[0],\n        Ajax.call([{ methodname: 'aiprovider_datacurso_get_services', args: {} }])[0],\n    ]).then(([saldoResponse, servicesResponse]) => {\n\n        const saldo = saldoResponse?.saldo_actual || 0;\n        tokensAvailable.textContent = saldo;\n\n        const servicios = servicesResponse?.services || [];\n        initCharts(servicios);\n\n    }).catch(err => console.error(\"‚ùå Error inicial:\", err));\n\n    // ============================================================\n    // üìä INICIALIZAR GR√ÅFICAS CON FILTROS\n    // ============================================================\n    const initCharts = (servicios) => {\n        const filterBar = document.getElementById('filter-service-bar');\n        const filterPie = document.getElementById('filter-service-pie');\n        const filterStart = document.getElementById('filter-start-date');\n        const filterEnd = document.getElementById('filter-end-date');\n\n        // Llenar selects de servicios\n        const fillSelect = (select) => {\n            select.innerHTML = '<option value=\"\">Todos</option>';\n            if (servicios?.length) {\n                servicios.forEach(s => {\n                    const opt = document.createElement('option');\n                    opt.value = s.name;\n                    opt.textContent = s.name;\n                    select.appendChild(opt);\n                });\n            }\n        };\n\n        fillSelect(filterBar);\n        fillSelect(filterPie);\n\n        // Render inicial\n        updateBarChart();\n        updatePieChart();\n        updateDayChart();\n\n        // Listeners de filtros\n        filterBar.addEventListener('change', updateBarChart);\n        filterPie.addEventListener('change', updatePieChart);\n        filterStart.addEventListener('change', updateDayChart);\n        filterEnd.addEventListener('change', updateDayChart);\n    };\n\n    // ============================================================\n    // üîπ FUNCIONES DE WS\n    // ============================================================\nconst fetchConsumptionData = async (params = {}) => {\n    const defaults = {\n        servicio: \"\",\n        accion: \"\",\n        fechadesde: \"\",\n        fechahasta: \"\"\n    };\n    const finalParams = { ...defaults, ...params };\n\n    try {\n        const response = await Ajax.call([{\n            methodname: 'aiprovider_datacurso_get_all_consumption',\n            args: finalParams\n        }])[0];\n\n        if (response.status !== 'success') {\n            console.warn(\"‚ö†Ô∏è WS devolvi√≥ estado:\", response.status);\n            return [];\n        }\n        console.log(\"response\", response);\n        return response.consumption || [];\n\n    } catch (error) {\n        console.error(\"‚ùå Error al obtener consumos:\", error);\n        return [];\n    }\n};\n    // ============================================================\n    // üìä GR√ÅFICA DE BARRAS: Consumo por mes + filtro por servicio\n    // ============================================================\n    const updateBarChart = async () => {\n        const servicio = document.getElementById('filter-service-bar').value;\n\n        const data = await fetchConsumptionData({\n            servicio: servicio !== 'all' ? servicio : ''\n        });\n\n        console.log(\"respueta barra\",  data);\n\n        // Calcular totales por mes\n        const byMonth = {};\n        data.forEach(c => {\n            const month = c.date.substring(0, 7);\n            byMonth[month] = (byMonth[month] || 0) + c.cant_tokens;\n        });\n\n        // Actualizar tarjeta de total consumido\n        const totalTokens = data.reduce((sum, c) => sum + (c.cant_tokens || 0), 0);\n        tokensConsumed.textContent = totalTokens;\n\n        // Renderizar gr√°fico\n        const ctx = document.getElementById('chart-tokens-by-month');\n        if (chartBar) chartBar.destroy();\n\n        chartBar = new Chart(ctx, {\n            type: 'bar',\n            data: {\n                labels: Object.keys(byMonth),\n                datasets: [{\n                    label: 'Tokens consumidos por mes',\n                    data: Object.values(byMonth),\n                    backgroundColor: '#0073e6',\n                }]\n            },\n            options: { responsive: true, maintainAspectRatio: false }\n        });\n    };\n\n    // ============================================================\n    // üìä GR√ÅFICA CIRCULAR: Distribuci√≥n por acci√≥n + filtro servicio\n    // ============================================================\n    const updatePieChart = async () => {\n        const servicio = document.getElementById('filter-service-pie').value;\n\n        const data = await fetchConsumptionData({\n            servicio: servicio !== 'all' ? servicio : null\n        });\n\n        console.log(\"respueta pai \",  data);\n\n        const byAction = {};\n        data.forEach(c => {\n            byAction[c.action] = (byAction[c.action] || 0) + c.cant_tokens;\n        });\n\n        const ctx = document.getElementById('chart-actions');\n        if (chartPie) chartPie.destroy();\n\n        chartPie = new Chart(ctx, {\n            type: 'pie',\n            data: {\n                labels: Object.keys(byAction),\n                datasets: [{\n                    data: Object.values(byAction),\n                    backgroundColor: ['#36A2EB', '#FF6384', '#FFCE56', '#4BC0C0'],\n                }]\n            },\n            options: { responsive: true, maintainAspectRatio: false }\n        });\n    };\n\n    // ============================================================\n    // üìä GR√ÅFICA DE L√çNEA: Consumo diario + filtros de fechas\n    // ============================================================\nconst updateDayChart = async () => {\n    const fechadesde = document.getElementById('filter-start-date').value;\n    const fechahasta = document.getElementById('filter-end-date').value;\n\n    const data = await fetchConsumptionData({\n        fechadesde: fechadesde || \"\",\n        fechahasta: fechahasta || \"\"\n    });\n\n    console.log(\"respuesta day\", data);\n\n    // Agrupar tokens por d√≠a\n    const byDay = {};\n    data.forEach(c => {\n        const day = c.date.substring(0, 10);\n        byDay[day] = (byDay[day] || 0) + c.cant_tokens;\n    });\n\n    // üîπ Ordenar fechas de lo m√°s antiguo a lo m√°s reciente\n    const labels = Object.keys(byDay).sort((a, b) => new Date(a) - new Date(b));\n    const values = labels.map(day => byDay[day]);\n\n    console.log(values)\n\n    // Renderizar gr√°fico\n    const ctx = document.getElementById('chart-tokens-by-day');\n    if (chartDay) chartDay.destroy();\n\n    chartDay = new Chart(ctx, {\n        type: 'line',\n        data: {\n            labels: labels,\n            datasets: [{\n                label: 'Tokens consumidos por d√≠a',\n                data: values,\n                borderColor: '#28a745',\n                backgroundColor: 'rgba(40,167,69,0.2)',\n                fill: true,\n                tension: 0.2,\n                pointRadius: 4,\n                pointHoverRadius: 6,\n                borderWidth: 2\n            }]\n        },\n        options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            scales: {\n                x: {\n                    title: { display: true, text: 'Fecha' }\n                },\n                y: {\n                    title: { display: true, text: 'Tokens consumidos' },\n                    beginAtZero: true\n                }\n            }\n        }\n    });\n};\n};\n"],"names":["tokensAvailable","document","getElementById","tokensConsumed","chartBar","chartPie","chartDay","Promise","all","Ajax","call","methodname","args","then","_ref","saldoResponse","servicesResponse","saldo","saldo_actual","textContent","servicios","services","initCharts","catch","err","console","error","filterBar","filterPie","filterStart","filterEnd","fillSelect","select","innerHTML","length","forEach","s","opt","createElement","value","name","appendChild","updateBarChart","updatePieChart","updateDayChart","addEventListener","fetchConsumptionData","async","params","defaults","servicio","accion","fechadesde","fechahasta","finalParams","response","status","warn","log","consumption","data","byMonth","c","month","date","substring","cant_tokens","totalTokens","reduce","sum","ctx","destroy","Chart","type","labels","Object","keys","datasets","label","values","backgroundColor","options","responsive","maintainAspectRatio","byAction","action","byDay","day","sort","a","b","Date","map","borderColor","fill","tension","pointRadius","pointHoverRadius","borderWidth","scales","x","title","display","text","y","beginAtZero"],"mappings":"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"}