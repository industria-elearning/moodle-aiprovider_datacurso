{"version":3,"file":"consumption.min.js","sources":["../src/consumption.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Consumption history table management.\n *\n * @module     aiprovider_datacurso/consumption\n * @copyright  2025 Industria Elearning\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport { get_string as getString } from 'core/str';\nimport Templates from 'core/templates';\nimport Notification from 'core/notification';\n\nexport const init = async () => {\n\n    // Elements DOM\n    const filterService = document.getElementById('filter-service');\n    const filterAction = document.getElementById('filter-action');\n    const filterFrom = document.getElementById('filter-date-from');\n    const filterTo = document.getElementById('filter-date-to');\n    const prevPageBtn = document.getElementById('prev-page');\n    const nextPageBtn = document.getElementById('next-page');\n    const pageInfo = document.getElementById('page-info');\n    const tableRegionSelector = '[data-region=\"aiprovider_datacurso/consumption-table\"]';\n\n    // Order\n    let currentSortField = '';\n    let currentSortDir = 'asc';\n\n    // Select and input for limit and page\n    const limitSelect = document.getElementById('filter-limit');\n    const pageInput = document.getElementById('filter-page');\n\n    // Init status\n    let currentPage = parseInt(sessionStorage.getItem('consumptionPage')) || 1;\n    let currentLimit = parseInt(sessionStorage.getItem('consumptionLimit')) || 10;\n\n    const savePage = (page) => sessionStorage.setItem('consumptionPage', page);\n    const saveLimit = (limit) => sessionStorage.setItem('consumptionLimit', limit);\n\n    const updateSortIndicators = () => {\n        document.querySelectorAll(`${tableRegionSelector} .sort-icon`).forEach(icon => {\n            icon.className = 'fa fa-sort sort-icon';\n        });\n\n        if (!currentSortField) {\n            return;\n        }\n\n        const activeHeader = document.querySelector(`${tableRegionSelector} [data-sort=\"${currentSortField}\"] .sort-icon`);\n        if (activeHeader) {\n            activeHeader.className = currentSortDir === 'asc'\n                ? 'fa fa-sort-up sort-icon'\n                : 'fa fa-sort-down sort-icon';\n        }\n    };\n\n    const bindSortingHandlers = () => {\n        document.querySelectorAll(`${tableRegionSelector} .sortable`).forEach(header => {\n            header.addEventListener('click', () => {\n                const field = header.dataset.sort;\n                if (!field) {\n                    return;\n                }\n\n                if (currentSortField === field) {\n                    currentSortDir = currentSortDir === 'asc' ? 'desc' : 'asc';\n                } else {\n                    currentSortField = field;\n                    currentSortDir = 'asc';\n                }\n\n                updateSortIndicators();\n                currentPage = 1;\n                savePage(currentPage);\n                fetchData();\n            });\n        });\n\n        updateSortIndicators();\n    };\n\n    const loadServices = async () => {\n        try {\n            const response = await Ajax.call([{\n                methodname: 'aiprovider_datacurso_get_services',\n                args: {}\n            }])[0];\n\n            if (response?.services?.length) {\n                response.services.forEach(s => {\n                    const opt = document.createElement('option');\n                    opt.value = s.name;\n                    opt.textContent = s.name;\n                    filterService.appendChild(opt);\n                });\n            }\n        } catch (error) {\n            Notification.exception(error);\n            return [];\n        }\n    };\n\n    const loadActions = async () => {\n        try {\n            const response = await Ajax.call([{\n                methodname: 'aiprovider_datacurso_get_actions',\n                args: {}\n            }])[0];\n\n            if (response?.actions?.length) {\n                response.actions.forEach(a => {\n                    const opt = document.createElement('option');\n                    opt.value = a.id;\n                    opt.textContent = a.name;\n                    filterAction.appendChild(opt);\n                });\n            }\n        } catch (error) {\n            Notification.exception(error);\n            return [];\n        }\n    };\n\n    const renderTable = async (listconsumptions, {loading = false} = {}) => {\n        const container = document.querySelector(tableRegionSelector);\n        if (!container) {\n            return;\n        }\n\n        const consumptions = Array.isArray(listconsumptions) ? listconsumptions : [];\n        const context = {\n            initialized: !loading,\n            consumptions: consumptions\n        };\n\n        try {\n            const render = await Templates.renderForPromise('aiprovider_datacurso/consumption_row', context);\n            await Templates.replaceNodeContents(container, render.html, render.js);\n            bindSortingHandlers();\n        } catch (error) {\n            Notification.exception(error);\n            const fallback = await Templates.renderForPromise('aiprovider_datacurso/consumption_row', {\n                initialized: true,\n                consumptions: []\n            });\n            await Templates.replaceNodeContents(container, fallback.html, fallback.js);\n            bindSortingHandlers();\n        }\n    };\n\n    // Get history with filters\n    const fetchData = () => {\n        const serviceValue = filterService.value;\n        const actionValue = filterAction.value;\n        const fromValue = filterFrom.value;\n        const toValue = filterTo.value;\n\n        const args = {\n            page: currentPage,\n            limit: currentLimit,\n            service: serviceValue !== 'all' ? serviceValue : '',\n            action: actionValue !== 'all' ? actionValue : '',\n            fromdate: fromValue || '',\n            todate: toValue || ''\n        };\n\n        if (currentSortField) {\n            args.shor = currentSortField;\n            args.shordir = currentSortDir;\n        }\n\n        renderTable([], {loading: true});\n\n        Ajax.call([{\n            methodname: 'aiprovider_datacurso_get_consumption_history',\n            args: args\n        }])[0].then(async (response) => {\n\n            const consumptions = response?.consumption || [];\n            await renderTable(consumptions);\n\n            const pagination = response?.pagination;\n            if (pagination) {\n                const { current_page, total_pages, total } = pagination;\n                const pageInfoText = await getString('pageinfo', 'aiprovider_datacurso', {\n                    current: current_page,\n                    totalpages: total_pages,\n                    total: total\n                });\n                pageInfo.textContent = pageInfoText;\n                if (pageInput) {\n                    pageInput.value = current_page;\n                }\n                prevPageBtn.disabled = current_page <= 1;\n                nextPageBtn.disabled = current_page >= total_pages;\n            } else {\n                pageInfo.textContent = '';\n                prevPageBtn.disabled = true;\n                nextPageBtn.disabled = true;\n            }\n        })\n            .catch((error) => {\n                Notification.exception(error);\n                return [];\n            });\n    };\n\n    // Event listeners for filters\n    [filterService, filterAction, filterFrom, filterTo].forEach(el => {\n        el.addEventListener('change', () => {\n            currentPage = 1;\n            savePage(currentPage);\n            fetchData();\n        });\n    });\n\n    prevPageBtn.addEventListener('click', () => {\n        if (currentPage > 1) {\n            currentPage--;\n            savePage(currentPage);\n            fetchData();\n        }\n    });\n\n    nextPageBtn.addEventListener('click', () => {\n        currentPage++;\n        savePage(currentPage);\n        fetchData();\n    });\n\n    if (limitSelect) {\n        limitSelect.value = currentLimit;\n        limitSelect.addEventListener('change', () => {\n            currentLimit = parseInt(limitSelect.value);\n            saveLimit(currentLimit);\n            currentPage = 1;\n            savePage(currentPage);\n            fetchData();\n        });\n    }\n\n    if (pageInput) {\n        pageInput.addEventListener('change', () => {\n            const newPage = parseInt(pageInput.value);\n            if (newPage && newPage > 0) {\n                currentPage = newPage;\n                savePage(currentPage);\n                fetchData();\n            }\n        });\n    }\n\n    // Initial load\n    Promise.all([loadServices(), loadActions()])\n        .then(() => fetchData())\n        .catch(Notification.exception);\n\n    bindSortingHandlers();\n};\n"],"names":["async","filterService","document","getElementById","filterAction","filterFrom","filterTo","prevPageBtn","nextPageBtn","pageInfo","tableRegionSelector","currentSortField","currentSortDir","limitSelect","pageInput","currentPage","parseInt","sessionStorage","getItem","currentLimit","savePage","page","setItem","updateSortIndicators","querySelectorAll","forEach","icon","className","activeHeader","querySelector","bindSortingHandlers","header","addEventListener","field","dataset","sort","fetchData","renderTable","listconsumptions","loading","container","consumptions","Array","isArray","context","initialized","render","Templates","renderForPromise","replaceNodeContents","html","js","error","exception","fallback","serviceValue","value","actionValue","fromValue","toValue","args","limit","service","action","fromdate","todate","shor","shordir","call","methodname","then","response","consumption","pagination","current_page","total_pages","total","pageInfoText","current","totalpages","textContent","disabled","catch","el","newPage","Promise","all","Ajax","services","_response$services","length","s","opt","createElement","name","appendChild","loadServices","actions","_response$actions","a","id","loadActions","Notification"],"mappings":"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"}