{"version":3,"file":"consumption.min.js","sources":["../src/consumption.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Consumption history table management.\n *\n * @module     aiprovider_datacurso/consumption\n * @copyright  2025 Industria Elearning\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/* eslint-disable */\nimport Ajax from 'core/ajax';\nimport { get_string as getString } from 'core/str';\nimport Templates from 'core/templates';\n\nexport const init = async () => {\n\n    // Strings\n    const page = await getString('page', 'core');\n    const of = await getString('of', 'aiprovider_datacurso');\n    const registers = await getString('registers', 'aiprovider_datacurso');\n\n    // Elements DOM\n    const tableBody = document.getElementById('consumption-table-body');\n    const filterService = document.getElementById('filter-service');\n    const filterAction = document.getElementById('filter-action');\n    const filterFrom = document.getElementById('filter-date-from');\n    const filterTo = document.getElementById('filter-date-to');\n    const prevPageBtn = document.getElementById('prev-page');\n    const nextPageBtn = document.getElementById('next-page');\n    const pageInfo = document.getElementById('page-info');\n\n    // Order\n    let currentSortField = '';\n    let currentSortDir = 'asc';\n\n    // Select and input for limit and page\n    const limitSelect = document.getElementById('filter-limit');\n    const pageInput = document.getElementById('filter-page');\n\n    // Init status\n    let currentPage = parseInt(sessionStorage.getItem('consumptionPage')) || 1;\n    let currentLimit = parseInt(sessionStorage.getItem('consumptionLimit')) || 10;\n\n    const savePage = (page) => sessionStorage.setItem('consumptionPage', page);\n    const saveLimit = (limit) => sessionStorage.setItem('consumptionLimit', limit);\n\n    const loadServices = async () => {\n        try {\n            const response = await Ajax.call([{\n                methodname: 'aiprovider_datacurso_get_services',\n                args: {}\n            }])[0];\n\n            if (response?.services?.length) {\n                response.services.forEach(s => {\n                    const opt = document.createElement('option');\n                    opt.value = s.name;\n                    opt.textContent = s.name;\n                    filterService.appendChild(opt);\n                });\n            }\n        } catch (error) {\n            console.error(\"Error loading services:\", error);\n        }\n    };\n\n    const loadActions = async () => {\n        try {\n            const response = await Ajax.call([{\n                methodname: 'aiprovider_datacurso_get_actions',\n                args: {}\n            }])[0];\n\n            if (response?.actions?.length) {\n                response.actions.forEach(a => {\n                    const opt = document.createElement('option');\n                    opt.value = a.id;\n                    opt.textContent = a.name;\n                    filterAction.appendChild(opt);\n                });\n            }\n        } catch (error) {\n            console.error(\"Error loading actions:\", error);\n        }\n    };\n\n    const renderTable = async (listconsumptions) => {\n        const tableBody = document.getElementById('consumption-table-body');\n\n        try {\n            if (!listconsumptions || listconsumptions.length === 0) {\n                const nodata = await Templates.render('aiprovider_datacurso/consumption_nodata', {});\n                tableBody.innerHTML = nodata;\n                return;\n            }\n\n            const context = { consumptions: listconsumptions };\n            const html = await Templates.render('aiprovider_datacurso/consumption_row', context);\n\n            tableBody.innerHTML = html;\n\n        } catch (error) {\n            console.error('Error rendering table:', error, error.stack);\n            const nodata = await Templates.render('aiprovider_datacurso/consumption_nodata', {});\n            tableBody.innerHTML = nodata;\n        }\n    };\n\n    // Get history with filters\n    const fetchData = () => {\n        const serviceValue = filterService.value;\n        const actionValue = filterAction.value;\n        const fromValue = filterFrom.value;\n        const toValue = filterTo.value;\n\n        const args = {\n            page: currentPage,\n            limit: currentLimit,\n            service: serviceValue !== 'all' ? serviceValue : '',\n            action: actionValue !== 'all' ? actionValue : '',\n            fromdate: fromValue || '',\n            todate: toValue || ''\n        };\n\n        if (currentSortField) {\n            args.shor = currentSortField;\n            args.shordir = currentSortDir;\n        }\n\n        Ajax.call([{\n            methodname: 'aiprovider_datacurso_get_consumption_history',\n            args: args\n        }])[0].then(response => {\n\n            const consumptions = response?.consumption || [];\n            renderTable(consumptions);\n\n            const pagination = response?.pagination;\n            if (pagination) {\n                const { current_page, total_pages, total } = pagination;\n                pageInfo.textContent = `${page} ${current_page} ${of} ${total_pages} (${total} ${registers})`;\n\n                if (pageInput) pageInput.value = current_page;\n\n                prevPageBtn.disabled = current_page <= 1;\n                nextPageBtn.disabled = current_page >= total_pages;\n            } else {\n                pageInfo.textContent = '';\n                prevPageBtn.disabled = true;\n                nextPageBtn.disabled = true;\n            }\n        })\n            .catch(async (e) => {\n                const nodata = await Templates.render('aiprovider_datacurso/consumption_nodata', {});\n                tableBody.innerHTML = nodata;\n                console.error(\"Error fetching data:\", e);\n            });\n    };\n\n    // Event listeners for filters\n    [filterService, filterAction, filterFrom, filterTo].forEach(el => {\n        el.addEventListener('change', () => {\n            currentPage = 1;\n            savePage(currentPage);\n            fetchData();\n        });\n    });\n\n    prevPageBtn.addEventListener('click', () => {\n        if (currentPage > 1) {\n            currentPage--;\n            savePage(currentPage);\n            fetchData();\n        }\n    });\n\n    nextPageBtn.addEventListener('click', () => {\n        currentPage++;\n        savePage(currentPage);\n        fetchData();\n    });\n\n    if (limitSelect) {\n        limitSelect.value = currentLimit;\n        limitSelect.addEventListener('change', () => {\n            currentLimit = parseInt(limitSelect.value);\n            saveLimit(currentLimit);\n            currentPage = 1;\n            savePage(currentPage);\n            fetchData();\n        });\n    }\n\n    if (pageInput) {\n        pageInput.addEventListener('change', () => {\n            const newPage = parseInt(pageInput.value);\n            if (newPage && newPage > 0) {\n                currentPage = newPage;\n                savePage(currentPage);\n                fetchData();\n            }\n        });\n    }\n\n    // Sortable columns\n    document.querySelectorAll('.sortable').forEach(header => {\n        header.addEventListener('click', () => {\n            const field = header.dataset.sort;\n            const icon = header.querySelector('.sort-icon');\n\n            if (currentSortField === field) {\n                currentSortDir = currentSortDir === 'asc' ? 'desc' : 'asc';\n            } else {\n                currentSortField = field;\n                currentSortDir = 'asc';\n            }\n\n            document.querySelectorAll('.sort-icon').forEach(i => {\n                i.className = 'fa fa-sort sort-icon';\n            });\n\n            icon.className = currentSortDir === 'asc'\n                ? 'fa fa-sort-up sort-icon'\n                : 'fa fa-sort-down sort-icon';\n\n            currentPage = 1;\n            savePage(currentPage);\n            fetchData();\n        });\n    });\n\n    // Initial load\n    Promise.all([loadServices(), loadActions()])\n        .then(() => fetchData())\n        .catch(e => console.error(\"Error in initial load:\", e));\n};\n"],"names":["async","page","of","registers","tableBody","document","getElementById","filterService","filterAction","filterFrom","filterTo","prevPageBtn","nextPageBtn","pageInfo","currentSortField","currentSortDir","limitSelect","pageInput","currentPage","parseInt","sessionStorage","getItem","currentLimit","savePage","setItem","fetchData","serviceValue","value","actionValue","fromValue","toValue","args","limit","service","action","fromdate","todate","shor","shordir","call","methodname","then","response","listconsumptions","length","nodata","Templates","render","innerHTML","context","consumptions","html","error","console","stack","renderTable","consumption","pagination","current_page","total_pages","total","textContent","disabled","catch","e","forEach","el","addEventListener","newPage","querySelectorAll","header","field","dataset","sort","icon","querySelector","i","className","Promise","all","Ajax","services","_response$services","s","opt","createElement","name","appendChild","loadServices","actions","_response$actions","a","id","loadActions"],"mappings":"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"}