{"version":3,"file":"consumption.min.js","sources":["../src/consumption.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * TODO describe module consumption\n *\n * @module     aiprovider_datacurso/consumption\n * @copyright  2025 Industria Elearning <info@industriaelearning.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n\n/* eslint-disable */\nimport Ajax from 'core/ajax';\nimport { get_string as getString } from 'core/str';\n\nexport const init = () => {\n    console.log(\"history consume\")\n    const tableBody = document.getElementById('consumption-table-body');\n    const filterService = document.getElementById('filter-service');\n    const filterAction = document.getElementById('filter-action');\n    const prevPageBtn = document.getElementById('prev-page');\n    const nextPageBtn = document.getElementById('next-page');\n    const pageInfo = document.getElementById('page-info');\n\n    let allConsumos = [];\n    let filteredConsumos = [];\n    let currentPage = 1;\n    const rowsPerPage = 10;\n\n    // Renderiza las filas en la tabla\n    const renderTable = () => {\n        tableBody.innerHTML = '';\n        if (filteredConsumos.length === 0) {\n            getString('nodata', 'aiprovider_datacurso').then(nodata => {\n                tableBody.innerHTML = `<tr><td colspan=\"7\">${nodata}</td></tr>`;\n            });\n            pageInfo.textContent = '';\n            prevPageBtn.disabled = true;\n            nextPageBtn.disabled = true;\n            return;\n        }\n\n        const start = (currentPage - 1) * rowsPerPage;\n        const end = start + rowsPerPage;\n        const pageItems = filteredConsumos.slice(start, end);\n\n        pageItems.forEach(item => {\n            const row = document.createElement('tr');\n            row.innerHTML = `\n                <td>${item.id_consumo}</td>\n                <td>${item.id_usuario}</td>\n                <td>${item.accion}</td>\n                <td>${item.servicio}</td>\n                <td>${item.cantidad_tokens}</td>\n                <td>${item.saldo_restante}</td>\n                <td>${item.fecha}</td>\n            `;\n            tableBody.appendChild(row);\n        });\n\n        // Info de paginaci칩n\n        const totalPages = Math.ceil(filteredConsumos.length / rowsPerPage);\n        pageInfo.textContent = `P치gina ${currentPage} de ${totalPages}`;\n        prevPageBtn.disabled = currentPage === 1;\n        nextPageBtn.disabled = currentPage === totalPages;\n    };\n\n    // Aplica filtros\n    const applyFilters = () => {\n        const serviceValue = filterService.value;\n        const actionValue = filterAction.value;\n\n        filteredConsumos = allConsumos.filter(item => {\n            const serviceMatch = serviceValue === 'all' || item.servicio === serviceValue;\n            const actionMatch = actionValue === 'all' || item.accion === actionValue;\n            return serviceMatch && actionMatch;\n        });\n\n        currentPage = 1;\n        renderTable();\n    };\n\n    // Llamada AJAX\n    Ajax.call([{\n        methodname: 'aiprovider_datacurso_get_consumption_history',\n        args: {}\n    }])[0].then(async (response) => {\n        allConsumos = response?.consumos || [];\n\n        // Poblar selects din치micamente\n        const uniqueServices = [...new Set(allConsumos.map(c => c.servicio))];\n        const uniqueActions = [...new Set(allConsumos.map(c => c.accion))];\n\n        uniqueServices.forEach(s => {\n            const opt = document.createElement('option');\n            opt.value = s;\n            opt.textContent = s;\n            filterService.appendChild(opt);\n        });\n\n        uniqueActions.forEach(a => {\n            const opt = document.createElement('option');\n            opt.value = a;\n            opt.textContent = a;\n            filterAction.appendChild(opt);\n        });\n\n        // Listeners filtros\n        filterService.addEventListener('change', applyFilters);\n        filterAction.addEventListener('change', applyFilters);\n\n        // Listeners paginaci칩n\n        prevPageBtn.addEventListener('click', () => {\n            if (currentPage > 1) {\n                currentPage--;\n                renderTable();\n            }\n        });\n        nextPageBtn.addEventListener('click', () => {\n            const totalPages = Math.ceil(filteredConsumos.length / rowsPerPage);\n            if (currentPage < totalPages) {\n                currentPage++;\n                renderTable();\n            }\n        });\n\n        // Render inicial\n        filteredConsumos = allConsumos;\n        renderTable();\n    }).catch(async (error) => {\n        const nodata = await getString('nodata', 'aiprovider_datacurso');\n        tableBody.innerHTML = `<tr><td colspan=\"7\">${nodata}</td></tr>`;\n    });\n};\n"],"names":["console","log","tableBody","document","getElementById","filterService","filterAction","prevPageBtn","nextPageBtn","pageInfo","allConsumos","filteredConsumos","currentPage","renderTable","innerHTML","length","then","nodata","textContent","disabled","start","end","slice","forEach","item","row","createElement","id_consumo","id_usuario","accion","servicio","cantidad_tokens","saldo_restante","fecha","appendChild","totalPages","Math","ceil","applyFilters","serviceValue","value","actionValue","filter","serviceMatch","actionMatch","call","methodname","args","async","response","consumos","uniqueServices","Set","map","c","uniqueActions","s","opt","a","addEventListener","catch"],"mappings":";;;;;;;oJA4BoB,KAChBA,QAAQC,IAAI,yBACNC,UAAYC,SAASC,eAAe,0BACpCC,cAAgBF,SAASC,eAAe,kBACxCE,aAAeH,SAASC,eAAe,iBACvCG,YAAcJ,SAASC,eAAe,aACtCI,YAAcL,SAASC,eAAe,aACtCK,SAAWN,SAASC,eAAe,iBAErCM,YAAc,GACdC,iBAAmB,GACnBC,YAAc,QAIZC,YAAc,QAChBX,UAAUY,UAAY,GACU,IAA5BH,iBAAiBI,iCACP,SAAU,wBAAwBC,MAAKC,SAC7Cf,UAAUY,wCAAmCG,wBAEjDR,SAASS,YAAc,GACvBX,YAAYY,UAAW,OACvBX,YAAYW,UAAW,SAIrBC,MAfU,IAeDR,YAAc,GACvBS,IAAMD,MAhBI,GAiBET,iBAAiBW,MAAMF,MAAOC,KAEtCE,SAAQC,aACRC,IAAMtB,SAASuB,cAAc,MACnCD,IAAIX,0CACMU,KAAKG,iDACLH,KAAKI,iDACLJ,KAAKK,6CACLL,KAAKM,+CACLN,KAAKO,sDACLP,KAAKQ,qDACLR,KAAKS,6BAEf/B,UAAUgC,YAAYT,cAIpBU,WAAaC,KAAKC,KAAK1B,iBAAiBI,OAlC9B,IAmChBN,SAASS,6BAAwBN,2BAAkBuB,YACnD5B,YAAYY,SAA2B,IAAhBP,YACvBJ,YAAYW,SAAWP,cAAgBuB,YAIrCG,aAAe,WACXC,aAAelC,cAAcmC,MAC7BC,YAAcnC,aAAakC,MAEjC7B,iBAAmBD,YAAYgC,QAAOlB,aAC5BmB,aAAgC,QAAjBJ,cAA0Bf,KAAKM,WAAaS,aAC3DK,YAA8B,QAAhBH,aAAyBjB,KAAKK,SAAWY,mBACtDE,cAAgBC,eAG3BhC,YAAc,EACdC,6BAICgC,KAAK,CAAC,CACPC,WAAY,+CACZC,KAAM,MACN,GAAG/B,MAAKgC,MAAAA,WACRtC,aAAcuC,MAAAA,gBAAAA,SAAUC,WAAY,SAG9BC,eAAiB,IAAI,IAAIC,IAAI1C,YAAY2C,KAAIC,GAAKA,EAAExB,aACpDyB,cAAgB,IAAI,IAAIH,IAAI1C,YAAY2C,KAAIC,GAAKA,EAAEzB,WAEzDsB,eAAe5B,SAAQiC,UACbC,IAAMtD,SAASuB,cAAc,UACnC+B,IAAIjB,MAAQgB,EACZC,IAAIvC,YAAcsC,EAClBnD,cAAc6B,YAAYuB,QAG9BF,cAAchC,SAAQmC,UACZD,IAAMtD,SAASuB,cAAc,UACnC+B,IAAIjB,MAAQkB,EACZD,IAAIvC,YAAcwC,EAClBpD,aAAa4B,YAAYuB,QAI7BpD,cAAcsD,iBAAiB,SAAUrB,cACzChC,aAAaqD,iBAAiB,SAAUrB,cAGxC/B,YAAYoD,iBAAiB,SAAS,KAC9B/C,YAAc,IACdA,cACAC,kBAGRL,YAAYmD,iBAAiB,SAAS,WAC5BxB,WAAaC,KAAKC,KAAK1B,iBAAiBI,OA5FlC,IA6FRH,YAAcuB,aACdvB,cACAC,kBAKRF,iBAAmBD,YACnBG,iBACD+C,OAAMZ,MAAAA,cACC/B,aAAe,mBAAU,SAAU,wBACzCf,UAAUY,wCAAmCG"}