define("aiprovider_datacurso/report_charts",["exports","core/ajax","core/chartjs","core/str"],(function(_exports,_ajax,_chartjs,_str){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * Report charts module (with advanced table).
   *
   * @module     aiprovider_datacurso/report_charts
   * @copyright  2025 Industria Elearning
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_ajax=_interopRequireDefault(_ajax),_chartjs=_interopRequireDefault(_chartjs);_exports.init=()=>{const tokensAvailable=document.getElementById("tokens-available"),tokensConsumed=document.getElementById("tokens-consumed"),tableBody=document.getElementById("consumption-table-body"),filterService=document.getElementById("filter-service"),filterAction=document.getElementById("filter-action"),prevPageBtn=document.getElementById("prev-page"),nextPageBtn=document.getElementById("next-page"),pageInfo=document.getElementById("page-info");let consumos=[],filteredConsumos=[],currentPage=1;let chartBar,chartPie,chartDay;Promise.all([_ajax.default.call([{methodname:"aiprovider_datacurso_get_consumption_history",args:{}}])[0],_ajax.default.call([{methodname:"aiprovider_datacurso_get_tokens_saldo",args:{}}])[0]]).then((async _ref=>{let[historyResponse,saldoResponse]=_ref;console.log("response",historyResponse),consumos=(null==historyResponse?void 0:historyResponse.consumption)||[];const saldo=(null==saldoResponse?void 0:saldoResponse.saldo_actual)||0;tokensAvailable.textContent=saldo,tokensConsumed.textContent=consumos.reduce(((sum,c)=>sum+(c.cantidad_tokens||0)),0),initTable(consumos),initCharts(consumos)})).catch((err=>{console.error("❌ WS Error",err)}));const initCharts=data=>{const filterBar=document.getElementById("filter-service-bar"),filterPie=document.getElementById("filter-service-pie");[...new Set(data.map((c=>c.id_servicio)))].forEach((s=>{filterBar.innerHTML+='<option value="'.concat(s,'">').concat(s,"</option>"),filterPie.innerHTML+='<option value="'.concat(s,'">').concat(s,"</option>")})),renderBarChart(data),renderPieChart(data),renderDayChart(data),filterBar.addEventListener("change",(()=>renderBarChart(data))),filterPie.addEventListener("change",(()=>renderPieChart(data))),document.getElementById("filter-start-date").addEventListener("change",(()=>renderDayChart(data))),document.getElementById("filter-end-date").addEventListener("change",(()=>renderDayChart(data)))},renderBarChart=data=>{const filterValue=document.getElementById("filter-service-bar").value;let filteredData="ALL"===filterValue?data:data.filter((c=>c.id_servicio===filterValue));const byMonth={};filteredData.forEach((c=>{const month=c.fecha.substring(0,7);byMonth[month]=(byMonth[month]||0)+c.cantidad_tokens}));const ctx1=document.getElementById("chart-tokens-by-month");chartBar&&chartBar.destroy(),chartBar=new _chartjs.default(ctx1,{type:"bar",data:{labels:Object.keys(byMonth),datasets:[{label:"Tokens consumed",data:Object.values(byMonth),backgroundColor:"#0073e6"}]}})},renderPieChart=data=>{const filterValue=document.getElementById("filter-service-pie").value;let filteredData="ALL"===filterValue?data:data.filter((c=>c.id_servicio===filterValue));const byAction={};filteredData.forEach((c=>{byAction[c.accion]=(byAction[c.accion]||0)+c.cantidad_tokens}));const ctx2=document.getElementById("chart-actions");chartPie&&chartPie.destroy(),chartPie=new _chartjs.default(ctx2,{type:"pie",data:{labels:Object.keys(byAction),datasets:[{data:Object.values(byAction),backgroundColor:["#36A2EB","#FF6384","#FFCE56","#4BC0C0"]}]}})},renderDayChart=data=>{const startDate=document.getElementById("filter-start-date").value,endDate=document.getElementById("filter-end-date").value;let filteredData=data;startDate&&(filteredData=filteredData.filter((c=>c.fecha>=startDate))),endDate&&(filteredData=filteredData.filter((c=>c.fecha<=endDate)));const byDay={};filteredData.forEach((c=>{const day=c.fecha.substring(0,10);byDay[day]=(byDay[day]||0)+c.cantidad_tokens}));const ctx3=document.getElementById("chart-tokens-by-day");chartDay&&chartDay.destroy(),chartDay=new _chartjs.default(ctx3,{type:"line",data:{labels:Object.keys(byDay),datasets:[{label:"Tokens consumed per day",data:Object.values(byDay),borderColor:"#28a745",backgroundColor:"rgba(40,167,69,0.2)",fill:!0}]}})},initTable=async data=>{consumos=data,filteredConsumos=[...data];const uniqueServices=[...new Set(consumos.map((c=>c.id_servicio)))],uniqueActions=[...new Set(consumos.map((c=>c.accion)))];uniqueServices.forEach((s=>{const opt=document.createElement("option");opt.value=s,opt.textContent=s,filterService.appendChild(opt)})),uniqueActions.forEach((a=>{const opt=document.createElement("option");opt.value=a,opt.textContent=a,filterAction.appendChild(opt)})),filterService.addEventListener("change",applyFilters),filterAction.addEventListener("change",applyFilters),prevPageBtn.addEventListener("click",(()=>{currentPage>1&&(currentPage--,renderTable())})),nextPageBtn.addEventListener("click",(()=>{const totalPages=Math.ceil(filteredConsumos.length/10);currentPage<totalPages&&(currentPage++,renderTable())})),renderTable()},applyFilters=()=>{const serviceValue=filterService.value,actionValue=filterAction.value;filteredConsumos=consumos.filter((item=>{const serviceMatch="all"===serviceValue||item.id_servicio===serviceValue,actionMatch="all"===actionValue||item.accion===actionValue;return serviceMatch&&actionMatch})),currentPage=1,renderTable()},renderTable=async()=>{if(tableBody.innerHTML="",0===filteredConsumos.length){const nodata=await(0,_str.get_string)("nodata","aiprovider_datacurso");return tableBody.innerHTML='<tr><td colspan="7" class="text-center">'.concat(nodata,"</td></tr>"),pageInfo.textContent="",prevPageBtn.disabled=!0,void(nextPageBtn.disabled=!0)}const start=10*(currentPage-1),end=start+10;filteredConsumos.slice(start,end).forEach((item=>{const row=document.createElement("tr");row.innerHTML="\n                <td>".concat(item.id_consumo,"</td>\n                <td>").concat(item.userid,"</td>\n                <td>").concat(item.accion,"</td>\n                <td>").concat(item.id_servicio,"</td>\n                <td>").concat(item.cantidad_tokens,"</td>\n                <td>").concat(item.saldo_restante,"</td>\n                <td>").concat(item.fecha,"</td>\n            "),tableBody.appendChild(row)}));const totalPages=Math.ceil(filteredConsumos.length/10);pageInfo.textContent="Página ".concat(currentPage," de ").concat(totalPages),prevPageBtn.disabled=1===currentPage,nextPageBtn.disabled=currentPage===totalPages}}}));

//# sourceMappingURL=report_charts.min.js.map